import{_ as s,o as n,c as a,V as l}from"./chunks/framework.364d6ed5.js";const p="/assets/image.5c23eea3.png",e="/assets/image-1.c206da5c.png",o="/assets/image-2.2aba1e26.png",c="/assets/image-3.f799d443.png",r="/assets/image-4.e44e61fd.png",t="/assets/image-5.b6d1621e.png",i="/assets/image-6.2164ff03.png",y="/assets/image-7.c720f5c7.png",C="/assets/image-8.36fa3a8b.png",D="/assets/image-9.d9b3fbcc.png",F="/assets/image-10.c37be349.png",E=JSON.parse('{"title":"反向代理相关","description":"","frontmatter":{},"headers":[],"relativePath":"nginx/reverse-proxy/index.md","filePath":"nginx/reverse-proxy/index.md","lastUpdated":1693228208000}'),d={name:"nginx/reverse-proxy/index.md"},A=l('<h1 id="反向代理相关" tabindex="-1">反向代理相关 <a class="header-anchor" href="#反向代理相关" aria-label="Permalink to &quot;反向代理相关&quot;">​</a></h1><h2 id="什么是反向代理" tabindex="-1">什么是反向代理 <a class="header-anchor" href="#什么是反向代理" aria-label="Permalink to &quot;什么是反向代理&quot;">​</a></h2><p>简单来讲反向代理就是为服务端服务的，反向代理可以帮助服务器接收来自客户端的请求，帮助服务器做 <span style="color:#7B68EE;">请求转发，负载均衡等</span> 功能。</p><h2 id="反向代理的作用" tabindex="-1">反向代理的作用 <a class="header-anchor" href="#反向代理的作用" aria-label="Permalink to &quot;反向代理的作用&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">负载均衡</p><ul><li>负载均衡是指将请求分发到多个服务器上，从而达到多台服务器共同处理请求的目的，从而提高服务器的性能。</li></ul></div><div class="info custom-block"><p class="custom-block-title">增加安全性</p><ul><li>反向代理可以隐藏服务器的真实 IP 地址，提高服务器的安全性。</li></ul></div><div class="info custom-block"><p class="custom-block-title">缓存</p><ul><li>反向代理可以缓存静态资源，从而提高服务器的性能。</li></ul></div><h2 id="nginx-实操反向代理" tabindex="-1">Nginx 实操反向代理 <a class="header-anchor" href="#nginx-实操反向代理" aria-label="Permalink to &quot;Nginx 实操反向代理&quot;">​</a></h2><h3 id="准备一个-nest-项目" tabindex="-1">准备一个 nest 项目 <a class="header-anchor" href="#准备一个-nest-项目" aria-label="Permalink to &quot;准备一个 nest 项目&quot;">​</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">nest</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nest-reverse-proxy</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+p+`" alt="Alt text"></p><ul><li>给服务添加一个全局的前缀 /api</li></ul><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// main.ts</span></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">bootstrap</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">app</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">NestFactory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">AppModule</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setGlobalPrefix</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">api</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">listen</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">3000</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#82AAFF;">bootstrap</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li>访问一下 <code>http://localhost:3000/api</code></li></ul><p><img src="`+e+'" alt="Alt text"></p><h3 id="准备一个-nginx-容器" tabindex="-1">准备一个 <code>nginx</code> 容器 <a class="header-anchor" href="#准备一个-nginx-容器" aria-label="Permalink to &quot;准备一个 `nginx` 容器&quot;">​</a></h3><ul><li>用 <code>docker desktop</code> 跑一个 <code>nginx</code> 容器，容器名和端口映射如下图：</li></ul><p><img src="'+o+'" alt="Alt text"></p><ul><li>访问一下 <code>http://localhost:81</code></li></ul><p><img src="'+c+`" alt="Alt text"></p><h3 id="改下-nginx-配置文件" tabindex="-1">改下 <code>nginx</code> 配置文件 <a class="header-anchor" href="#改下-nginx-配置文件" aria-label="Permalink to &quot;改下 \`nginx\` 配置文件&quot;">​</a></h3><ul><li>修改一下 <code>default.conf</code> 配置文件，在里面添加一个路由配置。</li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">server</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">listen</span><span style="color:#A6ACCD;">       </span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">server_name</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">localhost</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#FFCB6B;">root</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">/usr/share/nginx/html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#FFCB6B;">index</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">index.html</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">index.htm</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">^~</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/api</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#FFCB6B;">proxy_pass</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">http://[你本地的ip地址]:3000</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	}</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><ul><li><p>这个路由是根据前缀匹配 <code>/api</code> 开头的 <code>url</code>， <code>^~</code> 是提高优先级用的。</p></li><li><p>重启一下 <code>nginx</code> 容器，访问一下 <code>http://localhost:81/api</code></p></li></ul><p><img src="`+r+`" alt="Alt text"></p><ul><li>能看到 <code>nest</code> 项目的 <code>api</code> 路由正确响应了。</li></ul><h2 id="修改请求、响应的-header" tabindex="-1">修改请求、响应的 header <a class="header-anchor" href="#修改请求、响应的-header" aria-label="Permalink to &quot;修改请求、响应的 header&quot;">​</a></h2><ul><li>在 <code>nginx</code> 配置文件中添加一个 <code>proxy_set_header</code> 配置。</li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">^~</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/api</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">proxy_pass</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">http://[你本地的ip地址]:3000</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">proxy_set_header</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">X-Real-IP</span><span style="color:#A6ACCD;"> $remote_addr</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">proxy_set_header</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">X-Forwarded-For</span><span style="color:#A6ACCD;"> $proxy_add_x_forwarded_for</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">proxy_set_header</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">name</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">jingda</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ul><li><p>重启一下 <code>nginx</code> 容器</p></li><li><p>在 <code>nest</code> 项目中添加一个 <code>api</code> 路由，用来测试请求和响应。</p></li></ul><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Controller</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Get</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Headers</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@nestjs/common</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">AppService</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./app.service</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">Controller</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">AppController</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">constructor</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">readonly</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">appService</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">AppService</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">Get</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">getHello</span><span style="color:#89DDFF;">(@</span><span style="color:#82AAFF;">Headers</span><span style="color:#A6ACCD;">() </span><span style="color:#A6ACCD;font-style:italic;">headers</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">headers</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">appService</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getHello</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ul><li>重启一下 <code>nest</code> 项目，先用浏览器访问一下 <code>http://localhost:3000/api</code></li></ul><p><img src="`+t+'" alt="Alt text"></p><ul><li><p>发现直接访问 <code>nest</code> 服务的话，是没有 <code>log</code> 出来添加的 <code>header</code> 的。</p></li><li><p>再用浏览器访问一下 <code>http://localhost:81/api</code> ，发现 <code>log</code> 出来了添加的 <code>header</code>。</p></li></ul><p><img src="'+i+`" alt="Alt text"></p><h2 id="实现负载均衡" tabindex="-1">实现负载均衡 <a class="header-anchor" href="#实现负载均衡" aria-label="Permalink to &quot;实现负载均衡&quot;">​</a></h2><ul><li>nginx 是一种常用的高性能 Web 服务器和反向代理服务器，它也支持负载均衡来分发流量到多个后端服务器。nginx 的负载均衡策略可以通过配置文件进行设置</li></ul><div class="info custom-block"><p class="custom-block-title">常见的负载均衡策略</p><ul><li><p>轮询（Round Robin）：默认的负载均衡策略，<code>nginx</code> 会依次将请求分发给每个后端服务器，循环进行，直到所有服务器都被轮询一遍。</p></li><li><p>加权轮询（Weighted Round Robin）：在轮询的基础上，为每个后端服务器分配一个权重值，根据权重值的比例来分发请求。权重值越高，分发的请求越多。</p></li><li><p>IP 哈希（IP Hash）：基于客户端的 <code>IP</code> 地址，通过哈希算法将同一个 <code>IP</code> 地址的请求始终分发到同一个后端服务器，适用于需要保持会话的情况。</p></li><li><p>最少连接数（Least Connections）：将请求分发到当前连接数最少的后端服务器，从而实现负载均衡。适用于每个请求处理时间不同的情况。</p></li><li><p>加权最少连接数（Weighted Least Connections）：类似于加权轮询，但是根据后端服务器的连接数来分配权重，连接数越少，权重越高。</p></li><li><p>URI 哈希（URI Hash）：基于请求的 <code>URI</code> 来进行哈希，相同 <code>URI</code> 的请求会被分发到同一个后端服务器，适用于缓存等场景。</p></li><li><p>随机（Random）：随机选择一个后端服务器进行请求分发，不同于轮询的有序方式。</p></li><li><p>基于响应时间（Least Time）：根据后端服务器的响应时间来进行负载均衡，将请求发送到响应时间最短的服务器。</p></li></ul><p>以上只是一些常见的负载均衡策略，实际使用时可以根据具体需求选择合适的策略。在 nginx 的配置文件中，可以使用 <code>upstream</code> 块来定义后端服务器列表，并在 <code>location</code> 块中使用 <code>proxy_pass</code> 指令来实现负载均衡。</p></div><ul><li>因为场景复现原因，这里只实操一下前三个负载均衡策略</li></ul><h3 id="准备工作" tabindex="-1">准备工作 <a class="header-anchor" href="#准备工作" aria-label="Permalink to &quot;准备工作&quot;">​</a></h3><ul><li>准备两个 <code>nest</code> 项目</li><li>分别启动两个 <code>nest</code> 项目，端口分别为 <code>3000</code> 和 <code>3001</code></li><li>在 <code>nest</code> 项目中的 <code>controlller</code> 中分别 log 一下端口号，用来区分两个项目</li></ul><div class="info custom-block"><p class="custom-block-title">项目一</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">Get</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#82AAFF;">getHello</span><span style="color:#A6ACCD;">(): string </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">3000 port is running</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">appService</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getHello</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">...</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></div><div class="info custom-block"><p class="custom-block-title">项目二</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">Get</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#82AAFF;">getHello</span><span style="color:#A6ACCD;">(): string </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">3001 port is running</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">appService</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getHello</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">...</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></div><p><img src="`+y+`" alt="Alt text"></p><h3 id="轮询-round-robin" tabindex="-1">轮询（Round Robin） <a class="header-anchor" href="#轮询-round-robin" aria-label="Permalink to &quot;轮询（Round Robin）&quot;">​</a></h3><ul><li>现在有一个 nginx 服务器，两个【这里只是用两个来学习验证，实际数量远远不止】 nest 后端服务了</li><li>要是现在用户访问 nginx 服务器 <code>http://localhost:81/api</code> 的话，那么真实请求会被转发到哪个后端服务上呢？</li><li>这里就需要用到 <code>upstream</code> 配置了</li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">upstream</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nest-server</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">server</span><span style="color:#A6ACCD;"> [你本地的ip地址]:3000</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">server</span><span style="color:#A6ACCD;"> [你本地的ip地址]:3001</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li><p>在 <code>upstream</code> 里配置它代理的目标服务器的所有实例。</p></li><li><p>下面 <code>proxy_pass</code> 通过 <code>upstream</code> 的名字来指定。</p></li><li><p>修改一下 <code>nginx</code> 配置文件</p></li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">upstream</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nest-server</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">server</span><span style="color:#A6ACCD;"> [你本地的ip地址]:3000</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">server</span><span style="color:#A6ACCD;"> [你本地的ip地址]:3001</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">server</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">listen</span><span style="color:#A6ACCD;">       </span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">server_name</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">localhost</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#FFCB6B;">root</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">/usr/share/nginx/html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#FFCB6B;">index</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">index.html</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">index.htm</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">^~</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/api</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#FFCB6B;">proxy_pass</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">http://nest-server</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#FFCB6B;">proxy_set_header</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">X-Real-IP</span><span style="color:#A6ACCD;"> $remote_addr</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#FFCB6B;">proxy_set_header</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">X-Forwarded-For</span><span style="color:#A6ACCD;"> $proxy_add_x_forwarded_for</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#FFCB6B;">proxy_set_header</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">name</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">jingda</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	}</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><ul><li><p>重启一下 <code>nginx</code> 容器</p></li><li><p>然后访问一下 <code>http://localhost:81/api</code> 访问个 <code>5</code> 次看下效果</p></li></ul><p><img src="`+C+`" alt="Alt text"></p><ul><li>可以看到一个端口 3 次，一个端口 2 次。</li><li><code>nginx</code> 服务器会轮询的将请求转发到两个后端服务上。</li></ul><h3 id="加权轮询-weighted-round-robin" tabindex="-1">加权轮询（Weighted Round Robin） <a class="header-anchor" href="#加权轮询-weighted-round-robin" aria-label="Permalink to &quot;加权轮询（Weighted Round Robin）&quot;">​</a></h3><ul><li>有时候我们希望某个后端服务的负载更轻一些，就可以给这个后端服务配置一个小一点的权重</li><li>某个性能高的服务器可以配置一个大一点的权重</li><li><code>weight</code> 默认为 1</li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">upstream</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nest-server</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">server</span><span style="color:#A6ACCD;"> [你本地的ip地址]:3000 weight=1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">server</span><span style="color:#A6ACCD;"> [你本地的ip地址]:3001 weight=2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>修改一下 <code>nginx</code> 配置文件，然后重启一下 <code>nginx</code> 容器</li><li>然后访问一下 <code>http://localhost:81/api</code> 访问个 <code>9</code> 次看下效果</li></ul><p><img src="`+D+`" alt="Alt text"></p><ul><li>看打印的日志来看，3000 端口和 3001 端口的访问频率就是 1:2 的比例，符合我们的预期。</li></ul><h3 id="ip-哈希-ip-hash" tabindex="-1">IP 哈希（IP Hash） <a class="header-anchor" href="#ip-哈希-ip-hash" aria-label="Permalink to &quot;IP 哈希（IP Hash）&quot;">​</a></h3><ul><li><code>ip_hash</code> 的作用是将同一个 ip 的请求转发到同一个后端服务上，这样可以解决一些登录状态的问题。</li><li>修改一下 <code>nginx</code> 配置文件，然后重启一下 <code>nginx</code> 容器</li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">upstream</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nest-server</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">ip_hash</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">server</span><span style="color:#A6ACCD;"> [你本地的ip地址]:3000 weight=1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">server</span><span style="color:#A6ACCD;"> [你本地的ip地址]:3001 weight=2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>然后访问一下 <code>http://localhost:81/api</code> 访问个 <code>6</code> 次看下效果</li></ul><p><img src="`+F+'" alt="Alt text"></p><ul><li>可以看到一直请求到了一台服务器：3001 端口的服务器上。</li></ul>',64),b=[A];function u(m,h,g,x,v,B){return n(),a("div",null,b)}const f=s(d,[["render",u]]);export{E as __pageData,f as default};

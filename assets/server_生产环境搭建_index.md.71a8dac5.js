import{_ as s,o as a,c as n,V as l}from"./chunks/framework.364d6ed5.js";const e="/assets/mysql.e2951889.png",p="/assets/docker.4845c027.png",o="/assets/image-4.2a8a4a84.png",t="/assets/image-3.d0c36c9a.png",c="/assets/image-5.4f5870e6.png",r="/assets/image-7.31fa14e1.png",i="/assets/502.06d06303.png",C="/assets/demo.001dbd30.png",d="/assets/image.023cc843.png",y="/assets/image-1.390c21b4.png",D="/assets/image-2.88cb389a.png",u="/assets/image-6.37489d50.png",k=JSON.parse('{"title":"生产环境搭建","description":"","frontmatter":{},"headers":[],"relativePath":"server/生产环境搭建/index.md","filePath":"server/生产环境搭建/index.md","lastUpdated":1717689308000}'),A={name:"server/生产环境搭建/index.md"},b=l('<h1 id="生产环境搭建" tabindex="-1">生产环境搭建 <a class="header-anchor" href="#生产环境搭建" aria-label="Permalink to &quot;生产环境搭建&quot;">​</a></h1><h2 id="安装-node-js" tabindex="-1">安装 Node.js <a class="header-anchor" href="#安装-node-js" aria-label="Permalink to &quot;安装 Node.js&quot;">​</a></h2><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dnf</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nodejs</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-y</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="安装-mysql" tabindex="-1">安装 MySQL <a class="header-anchor" href="#安装-mysql" aria-label="Permalink to &quot;安装 MySQL&quot;">​</a></h2><h3 id="安装启动、开机自启动" tabindex="-1">安装启动、开机自启动 <a class="header-anchor" href="#安装启动、开机自启动" aria-label="Permalink to &quot;安装启动、开机自启动&quot;">​</a></h3><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dnf</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysql-server</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-y</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>安装完之后在服务器启动一下 <code>mysql</code> 服务。</li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">start</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysqld</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="info custom-block"><p class="custom-block-title">为什么 <code>start</code> 后面接的是 <code>mysqld</code></p><p>在命令 <code>sudo systemctl start mysqld</code> 中，<code>mysqld</code> 是 MySQL 数据库服务器的服务名称，通常这个服务名称是由软件包维护者或系统管理员定义的。具体来说，<code>mysqld</code> 中的 <code>d</code> 通常代表 &quot;daemon&quot;（守护进程）。</p><p>守护进程是一种在后台运行的进程，通常不与用户直接交互。它们通常提供各种系统服务，如数据库、网络、日志记录等。为了区分普通的命令行工具和后台服务，许多 Unix 和 Linux 系统的后台服务名称习惯性地以 <code>d</code> 结尾。</p><p>具体到 <code>mysqld</code>：</p><ul><li><code>mysql</code>：指的是 MySQL 数据库。</li><li><code>d</code>：表示这是一个守护进程（daemon）。</li></ul><p>因此，<code>mysqld</code> 是指 MySQL 数据库服务器的守护进程，它是负责处理数据库请求并管理 MySQL 数据库的后台服务。</p><p>使用 <code>systemctl</code> 来启动 <code>mysqld</code> 服务意味着告诉系统初始化并运行 MySQL 数据库的后台进程，以便数据库服务可以开始接受连接和处理查询。</p></div><ul><li>查看一下 <code>mysqld</code> 是否启动成功。</li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">status</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysqld</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+e+`" alt="alt text"></p><ul><li>设置 <code>mysqld</code> 服务开机启动</li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">enable</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysqld</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="info custom-block"><p class="custom-block-title">相关知识补充</p><p>运行 <code>sudo systemctl enable mysqld</code> 的作用是将 <code>MySQL</code> 数据库服务器设置为在系统启动时自动启动。让我们逐个解释这个命令的每个部分：</p><p><strong><code>sudo</code></strong>：</p><ul><li>这是一种在 <code>Unix</code> 和 <code>Linux</code> 系统上以超级用户（root）权限运行命令的方法。因为启用或配置系统服务需要管理员权限，所以使用 <code>sudo</code> 来提升权限。</li></ul><p><strong><code>systemctl</code></strong>：</p><ul><li>这是一个用于与 <code>systemd</code> 系统和服务管理器交互的命令行工具。<code>systemd</code> 是许多 <code>Linux</code> 发行版默认的初始化系统，用于启动和管理系统服务和资源。</li></ul><p><strong><code>enable</code></strong>：</p><ul><li>这是 <code>systemctl</code> 的一个子命令，用于启用某个服务，以便它在系统启动时自动运行。启用服务会创建适当的符号链接，使服务在系统引导过程中启动。</li></ul><p><strong><code>mysqld</code></strong>：</p><ul><li>这是 <code>MySQL</code> 数据库服务器的服务名称，指代 <code>MySQL</code> 守护进程。</li></ul><p>当你运行 <code>sudo systemctl enable mysqld</code> 时，<code>systemd</code> 会为 <code>MySQL</code> 服务创建启动时所需的符号链接。具体来说，这个命令会在系统的 <code>multi-user.target</code>（类似于传统的运行级别 3）和 <code>graphical.target</code>（类似于传统的运行级别 5）下创建符号链接，这样每次系统启动时，<code>mysqld</code> 服务都会自动启动。</p><ul><li>总结</li></ul><p><code>sudo systemctl enable mysqld</code> 的主要目的是确保 <code>MySQL</code> 数据库服务器在每次系统启动时自动启动，从而确保数据库服务在系统启动后立即可用。</p></div><h3 id="mysql-安全配置" tabindex="-1">MySQL 安全配置 <a class="header-anchor" href="#mysql-安全配置" aria-label="Permalink to &quot;MySQL 安全配置&quot;">​</a></h3><ul><li>安装完 MySQL 服务之后，可以做⼀点安全相关的配置</li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysql_secure_installation</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>执⾏上⾯的命令会问我们⼀系列的问题，一路 <code>yes</code> 就可以</li><li>中间有个选择密码强度的设置，可以根据实际情况进行设置，一般选中等强度就行了</li><li>不过我还是低估了这个密码强度，一直提示密码不合格，后来用 <code>openssl</code> 命令生成一个密码，然后输入就行了。</li><li>这个密码可要记住了，这是 <code>mysql</code> <code>root</code> 用户的密码。</li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">openssl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rand</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-base64</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">32</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="创建新用户与数据仓库" tabindex="-1">创建新⽤户与数据仓库 <a class="header-anchor" href="#创建新用户与数据仓库" aria-label="Permalink to &quot;创建新⽤户与数据仓库&quot;">​</a></h3><ul><li>在 MySQL 数据服务⾥，可以创建⼀个普通的⽤户，然后专门再给它分配⼀个可以管理的数据仓库。</li></ul><div class="warning custom-block"><p class="custom-block-title">注意 📢</p><ul><li>之前在执⾏安全配置的时候，我们禁⽌让 root ⽤户可以远程登录到 MySQL 数据服务</li><li>所以现在只能在本地登录，也就是我们先得⽤ SSH 登录到云服务器，然后再登录 MySQL 服务</li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">ssh</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">root@101.126.55.244</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysql</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-u</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">root</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>输入刚用 <code>openssl</code> 生成的密码，登录成功后就可以创建新的⽤户了。</li></ul></div><div class="info custom-block"><p class="custom-block-title">创建新用户</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">CREATE</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">USER</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">xb2_node_operator</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">%</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#FFCB6B;">IDENTIFIED</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">BY</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">5tq6SuVqm.....................</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li><p>⽤ CREATE USER 创建建⼀个叫 xb2_node_operator 的⽤户</p></li><li><p>在 @ 符号的后⾯可以设置⽤户的主机，这⾥⽤的是 %，表⽰任何主机都可以。</p></li><li><p>IDENTIFIED BY 的后⾯是为这个⽤户设置的登录密码。</p></li><li><p>如果你只想让这个⽤户在本地主机上登录，创建⽤户的时候设置的主机可以是 localhost，暂时先让⽤户的主机是 %，因为后⾯我们需要⽤数据库客户端远程连接数据服务。</p></li><li><p>MySQL 服务运⾏的那台机器叫本地主机（localhost），其它的地⽅都叫远程。如果你想远程登录到 MySQL 服务，创建这个⽤户的时候要设置主机的地址。</p></li><li><p>⽐如 MySQL 服务可能在⼀台单独的云服务器上，另外还有⼀台应⽤服务器运⾏应⽤，在应⽤服务器上要连接使⽤ MySQL 服务，在创建⽤户的时候给他设置的主机可以是这台应⽤服务器的 IP 地址。</p></li><li><p>如果运⾏ MySQL 的服务器与应⽤服务器在同⼀内⽹，可以把⽤户的主机设置成应⽤服务器的内⽹ IP，这样连接的速度会更快⼀些。</p></li><li><p>限制⽤户的主机是为了安全，因为如果⽤户不限制主机，任何⼈都可以试图使⽤这个⽤户远程连接我们的 MySQL 服务，虽然他们没有这个⽤户的密码，但是可以⽤⼀些⽅法猜到。</p></li><li><p>在部署应⽤的前期，我是⽤⼀个在我本地电脑上的数据库客户端连接到在我服务器上运⾏的 MySQL 服务，这样在创建⽤户的时候，⽤户的主机要设置成 %，表⽰不做限制，⽤户在哪⾥连接都可以。</p></li><li><p>应⽤部署完成以后，可以修改这个⽤户的主机，只让他可以在本地主机连接 MySQL，因为应⽤与 MySQL 在同⼀台云服务器上。</p></li></ul></div><div class="info custom-block"><p class="custom-block-title">创建数据仓库</p><ul><li>创建一个名为 xb2_node 的数据仓库</li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">CREATE</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">DATABASE</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">xb2_node</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>分配⽤户权限管理指定数据仓库</li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">GRANT</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ALL</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">PRIVILEGES</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ON</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">xb2_node.</span><span style="color:#A6ACCD;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">TO</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">xb2_node_operator</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">%</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>GRANT 可以分配权限</li><li>ALL PRIVILEGES 表⽰全部的权限</li><li>ON 的后⾯加上⼀个数据库</li><li>xb2_node.* 表⽰ xb2_node 这个数据仓库⾥的所有的数据表格</li><li>TO 的后⾯设置⼀下要把权限给哪个⽤户</li></ul></div><h2 id="安装-docker" tabindex="-1">安装 Docker <a class="header-anchor" href="#安装-docker" aria-label="Permalink to &quot;安装 Docker&quot;">​</a></h2><ul><li>先通过 <code>dnf</code> 命令来配置 <code>Docker</code> 的官方存储库，以便能够安装 <code>Docker</code></li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dnf</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">config-manager</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--add-repo=https://download.docker.com/linux/centos/docker-ce.repo</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>安装 <code>Docker</code></li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dnf</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker-ce</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-y</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="`+p+'" alt="alt text"></p><ul><li>启动 Docker</li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">start</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>设置 Docker 开机自启动</li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">enable</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>好像暂时没用到 docker ，后面真没用到的话就卸载。</li></ul><h2 id="安装-nginx" tabindex="-1">安装 Nginx <a class="header-anchor" href="#安装-nginx" aria-label="Permalink to &quot;安装 Nginx&quot;">​</a></h2><h3 id="安装启动、开机自启动-1" tabindex="-1">安装启动、开机自启动 <a class="header-anchor" href="#安装启动、开机自启动-1" aria-label="Permalink to &quot;安装启动、开机自启动&quot;">​</a></h3><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dnf</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-y</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>安装完之后在服务器启动一下 <code>nginx</code> 服务。</li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">start</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>查看一下 <code>nginx</code> 是否启动成功。</li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">status</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>设置 <code>nginx</code> 服务开机启动</li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">enable</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="理解-nginx-的配置文件" tabindex="-1">理解 NGINX 的配置⽂件 <a class="header-anchor" href="#理解-nginx-的配置文件" aria-label="Permalink to &quot;理解 NGINX 的配置⽂件&quot;">​</a></h3><ul><li>后面有时间再补详细内容</li></ul><h2 id="加密传输-https" tabindex="-1">加密传输 HTTPS <a class="header-anchor" href="#加密传输-https" aria-label="Permalink to &quot;加密传输 HTTPS&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">加密传输</p><ul><li>访问⽹站的时候，如果⽤ HTTP 协议，在地址栏上⾯会提⽰ “不安全”</li><li>为了让客户端与服务端之间可以安全的传输数据，现在推荐使⽤ HTTPS 协议</li><li>想要使⽤这种协议要在 Web 服务器上配置使⽤ SSL 证书</li><li>这种证书是⼀些权威机构颁发的，有些是付费的，⽽且不便宜</li><li>但是也有免费的 SSL 证书，⽐如 Let&#39;s Encrypt 就会给我们颁发免费的 SSL 证书</li></ul></div><h3 id="用-certbot-申请-let-s-encrypt-签发的-ssl-证书" tabindex="-1">用 Certbot 申请 Let’s Encrypt 签发的 SSL 证书 <a class="header-anchor" href="#用-certbot-申请-let-s-encrypt-签发的-ssl-证书" aria-label="Permalink to &quot;用 Certbot 申请 Let’s Encrypt 签发的 SSL 证书&quot;">​</a></h3><p>使用 Certbot 来申请 Let’s Encrypt 签发的 SSL 证书是一个比较直接的过程。下面是一个详细的步骤指南，适用于基于 CentOS 系统的服务器。</p><h3 id="步骤-1-安装-certbot" tabindex="-1">步骤 1: 安装 Certbot <a class="header-anchor" href="#步骤-1-安装-certbot" aria-label="Permalink to &quot;步骤 1: 安装 Certbot&quot;">​</a></h3><ul><li>安装 EPEL（Extra Packages for Enterprise Linux）存储库，因为 Certbot 在这个存储库中：</li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dnf</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">epel-release</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><p>接下来，安装 Certbot 及其 Nginx 或 Apache 插件（根据你使用的 Web 服务器选择安装）：</p></li><li><p>对于 Nginx：</p></li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dnf</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">certbot</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">python3-certbot-nginx</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>对于 Apache：</li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dnf</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">certbot</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">python3-certbot-apache</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="步骤-2-申请-ssl-证书" tabindex="-1">步骤 2: 申请 SSL 证书 <a class="header-anchor" href="#步骤-2-申请-ssl-证书" aria-label="Permalink to &quot;步骤 2: 申请 SSL 证书&quot;">​</a></h3><p>根据你的 Web 服务器，使用 Certbot 申请 SSL 证书。</p><ul><li>对于 Nginx</li></ul><ol><li><strong>获取并安装证书</strong>：</li></ol><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">certbot</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--nginx</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li>Certbot 会自动检测你的 Nginx 配置并询问你要为哪些域名申请证书。输入相应的域名，然后 Certbot 会处理剩下的步骤，包括编辑你的 Nginx 配置以使用新的 SSL 证书。</li></ol><ul><li>对于 Apache</li></ul><ol><li><strong>获取并安装证书</strong>：</li></ol><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">certbot</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--apache</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li>Certbot 会自动检测你的 Apache 配置并询问你要为哪些域名申请证书。输入相应的域名，然后 Certbot 会处理剩下的步骤，包括编辑你的 Apache 配置以使用新的 SSL 证书。</li></ol><h3 id="步骤-3-自动续订" tabindex="-1">步骤 3: 自动续订 <a class="header-anchor" href="#步骤-3-自动续订" aria-label="Permalink to &quot;步骤 3: 自动续订&quot;">​</a></h3><p>Let’s Encrypt 的证书有效期为 90 天，因此你需要设置自动续订。幸运的是，Certbot 会默认添加续订任务到 <code>cron</code> 或 <code>systemd</code>。你可以手动验证续订过程是否正常工作：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">certbot</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">renew</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--dry-run</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这会模拟续订过程并确保一切正常。如果没有错误，你的证书将会在到期前自动续订。</p><h3 id="步骤-4-验证-ssl-证书" tabindex="-1">步骤 4: 验证 SSL 证书 <a class="header-anchor" href="#步骤-4-验证-ssl-证书" aria-label="Permalink to &quot;步骤 4: 验证 SSL 证书&quot;">​</a></h3><p>访问你的域名并检查 SSL 证书是否正确安装和配置。</p><div class="warning custom-block"><p class="custom-block-title">注意 📢</p><ul><li>执行这个步骤之前，先在 nginx 配置文件 <code>/etc/nginx/nginx.conf</code> 中把 <code>server_name</code> 改成你的域名</li><li>这样 Certbot 才能自动检测你的 Nginx 配置并询问你要为哪些域名申请证书</li><li>输入相应的域名，然后 Certbot 会处理剩下的步骤，包括编辑你的 Nginx 配置以使用新的 SSL 证书。</li></ul></div><h2 id="部署到生产环境" tabindex="-1">部署到生产环境 <a class="header-anchor" href="#部署到生产环境" aria-label="Permalink to &quot;部署到生产环境&quot;">​</a></h2><h3 id="部署后端服务" tabindex="-1">部署后端服务 <a class="header-anchor" href="#部署后端服务" aria-label="Permalink to &quot;部署后端服务&quot;">​</a></h3><ul><li>我们需要把远程仓库的代码拉到服务器上，所以需要在服务器上安装 <code>git</code></li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dnf</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-y</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>然后把远程仓库的代码拉到服务器上</li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">clone</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git@github.com:jingjing20/snap-shots-node.git</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="info custom-block"><p class="custom-block-title">注意 📢</p><ul><li><p>直接这么执行 git clone 会报错没权限</p></li><li><p>我们需要把服务器上的 ssh 公钥添加到我们的远程仓库的 Deploy keys 再拉代码</p></li></ul><p><img src="'+o+'" alt="alt text"></p><p><img src="'+t+'" alt="alt text"></p></div><ul><li><p>成功拉完代码之后，我们就可以在服务器上执行 <code>pnpm/npm install</code> 来安装依赖了</p></li><li><p>装完依赖之后如果有用到 env 文件的话，可以把 env 文件拷贝到服务器上或者新建一个 env 文件</p></li><li><p>然后执行 build 命令打包项目</p></li><li><p>成功之后就可以用 pm2 来启动项目了</p></li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pm2</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">start</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dist/main.js</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--name</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">wzh-node</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+c+'" alt="alt text"></p><h3 id="部署前端服务" tabindex="-1">部署前端服务 <a class="header-anchor" href="#部署前端服务" aria-label="Permalink to &quot;部署前端服务&quot;">​</a></h3><ul><li><p>部署前端代码也可以和部署后端代码一样</p></li><li><p>先拉代码、安装依赖、打包代码得到 dist 文件夹</p></li><li><p>然后配置 nginx 就行了</p></li><li><p>也可以直接本地打包出来之后，将 dist 文件夹拷贝到服务器上</p></li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">scp</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-r</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dist</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">wangzhihao@101.126.55.</span><span style="color:#A6ACCD;">***</span><span style="color:#C3E88D;">:~/snap-shots-vue</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+r+`" alt="alt text"></p><h2 id="配置-nginx-静态文件与反向代理" tabindex="-1">配置 Nginx 静态文件与反向代理 <a class="header-anchor" href="#配置-nginx-静态文件与反向代理" aria-label="Permalink to &quot;配置 Nginx 静态文件与反向代理&quot;">​</a></h2><ul><li><p>客户端接口请求过来了，我想让运行在服务端的 node 应用程序去处理这些请求，这时候就需要配置一个反向代理</p></li><li><p>在 <code>/etc/nginx/conf.d</code> 里面新建一个 <code>snap-shots.wangzhihao.top.conf</code> 文件，这个目录下的 <code>.conf</code> 文件都会被 <code>Nginx</code> 读取，配置如下</p></li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">server</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">server_name</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">snap-shots.wangzhihao.top</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#FFCB6B;">root</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/home/wangzhihao/snap-shots-vue</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#FFCB6B;">try_files</span><span style="color:#A6ACCD;"> $uri </span><span style="color:#C3E88D;">/index.html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   }</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/api/</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">proxy_set_header</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">X-Forwarded-Host</span><span style="color:#A6ACCD;"> $host</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> 	</span><span style="color:#FFCB6B;">proxy_set_header</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">X-Forwarded-Proto</span><span style="color:#A6ACCD;"> $scheme</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> 	</span><span style="color:#FFCB6B;">proxy_set_header</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">X-Real-IP</span><span style="color:#A6ACCD;"> $remote_addr</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> 	</span><span style="color:#FFCB6B;">proxy_set_header</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">X-Forwarded-For</span><span style="color:#A6ACCD;"> $proxy_add_x_forwarded_for</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> 	</span><span style="color:#FFCB6B;">proxy_set_header</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Host</span><span style="color:#A6ACCD;"> $http_host</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> 	</span><span style="color:#FFCB6B;">proxy_set_header</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Upgrade</span><span style="color:#A6ACCD;"> $http_upgrade</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> 	</span><span style="color:#FFCB6B;">proxy_set_header</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Connection</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">upgrade</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> 	</span><span style="color:#FFCB6B;">proxy_redirect</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">off</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> 	</span><span style="color:#FFCB6B;">expires</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">off</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> 	</span><span style="color:#FFCB6B;">sendfile</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">off</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">proxy_pass</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">http://localhost:3000/</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   }</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">error_page</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">404</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/404.html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/404.html</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">error_page</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">500</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">502</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">503</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">504</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/50x.html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/50x.html</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">listen</span><span style="color:#A6ACCD;"> [::]:443 ssl ipv6only=on</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># managed by Certbot</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">listen</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">443</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ssl</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># managed by Certbot</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">ssl_certificate</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/letsencrypt/live/snap-shots.wangzhihao.top/fullchain.pem</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># managed by Certbot</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">ssl_certificate_key</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/letsencrypt/live/snap-shots.wangzhihao.top/privkey.pem</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># managed by Certbot</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">include</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/letsencrypt/options-ssl-nginx.conf</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># managed by Certbot</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">ssl_dhparam</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/letsencrypt/ssl-dhparams.pem</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># managed by Certbot</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#FFCB6B;">server</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">$host = snap-shots.wangzhihao.top</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">301</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://</span><span style="color:#A6ACCD;">$host$request_uri</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># managed by Certbot</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">listen</span><span style="color:#A6ACCD;">       </span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">listen</span><span style="color:#A6ACCD;">       [::]:80</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">server_name</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">snap-shots.wangzhihao.top</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">404</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># managed by Certbot</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><ul><li><p>最重要的一行就是 <code>proxy_pass</code> <code>http://127.0.0.1:3000/</code>;</p></li><li><p>这会让原本请求到 <code>snap-shots.wangzhihao.top</code> 的请求通过 <code>Nginx</code> 反向代理到 <code>http://127.0.0.1:3000/</code>;</p></li><li><p>然后通过 <code>sudo systemctl restart nginx</code> 来重启 <code>Nginx</code></p></li><li><p>这样就能让 <code>snap-shots.wangzhihao.top</code> 的请求通过 <code>Nginx</code> 反向代理到 <code>http://127.0.0.1:3000/</code></p></li></ul><p><img src="`+i+'" alt="alt text"></p><div class="warning custom-block"><p class="custom-block-title">注意 📢</p><ul><li>现在访问我们的服务器地址会 502</li><li>这就说明反向代理成功了，因为目前我们的服务器上的 <code>http://127.0.0.1:3000</code> 暂时没有提供任何响应</li><li>截图显示的是 ip 不是域名，因为我的域名正在备案中，之后再处理。</li></ul></div><h2 id="使用-pm2-启动服务" tabindex="-1">使用 PM2 启动服务 <a class="header-anchor" href="#使用-pm2-启动服务" aria-label="Permalink to &quot;使用 PM2 启动服务&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">注意 📢</p><ul><li>在服务器如果直接⽤ <code>node</code> 命令运⾏应⽤，关掉终端的时候应⽤就会停⽌运⾏</li><li>所以我们需要找⼀种⽅法在后台运⾏ <code>Node.js</code> 应⽤。<code>PM2</code> 是⼀种专门管理 <code>Node.js</code> 应⽤的进程管理器，可以帮我们在后台运⾏ <code>Node.js</code> 应⽤，应⽤如果意外停⽌，它会帮我们重新启动应⽤。</li></ul></div><ul><li>在服务器上安装 <code>PM2</code></li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pm2</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-g</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>在服务器根目录下新建一个 <code>node-app</code> 文件夹，进到里面执行 <code>npm init -y</code></li></ul><p><img src="'+C+`" alt="alt text"></p><ul><li><p>运行命令 <code>npm i express</code> 安装 <code>express</code></p></li><li><p>运行命令 <code>sudo vi index.js</code> 新建一个 <code>index.js</code> 文件，内容如下：</p></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> express </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">express</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> app </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">express</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> port </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3000</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">req</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">res</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">send</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hello World!</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">listen</span><span style="color:#A6ACCD;">(port</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">Example app listening on port </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">port</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">!</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>此时 node-app 目录下文件如下：</li></ul><p><img src="`+d+'" alt="alt text"></p><div class="info custom-block"><p class="custom-block-title">使用 pm2 启动 服务 📢</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pm2</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">start</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">index.js</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--name</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">node-app</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><code>--name</code> 能指定进程名字，这里是 <code>node-app</code></li></ul><p><img src="'+y+'" alt="alt text"></p><ul><li>启动成功之后，再次访问我们的服务器 ip 地址就能看到 <code>Hello World!</code> 了</li></ul><p><img src="'+D+'" alt="alt text"></p></div><h2 id="后续问题记录" tabindex="-1">后续问题记录 <a class="header-anchor" href="#后续问题记录" aria-label="Permalink to &quot;后续问题记录&quot;">​</a></h2><h3 id="nginx-问题" tabindex="-1">nginx 问题 <a class="header-anchor" href="#nginx-问题" aria-label="Permalink to &quot;nginx 问题&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title">问题 📢</p><ul><li>上传文件报错了</li></ul><p><img src="'+u+`" alt="alt text"></p><ul><li>默认情况下，Nginx 限制客户端请求主体（例如文件上传）的最大大小为 1MB。</li><li>如果需要更改这个限制，可以通过调整 Nginx 配置文件中的 <code>client_max_body_size</code> 指令来实现。</li></ul></div><h4 id="配置-client-max-body-size" tabindex="-1">配置 <code>client_max_body_size</code> <a class="header-anchor" href="#配置-client-max-body-size" aria-label="Permalink to &quot;配置 \`client_max_body_size\`&quot;">​</a></h4><p><strong>打开 Nginx 配置文件</strong>：</p><p>通常在 <code>/etc/nginx/nginx.conf</code> 或 <code>/etc/nginx/conf.d/default.conf</code></p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">vi</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/nginx/nginx.conf</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>找到 <code>http {</code> 块</strong>，在其中添加或修改 <code>client_max_body_size</code> 指令。例如，将文件上传限制增加到 512MB：</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">http</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">    ...</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> client_max_body_size </span><span style="color:#A6ACCD;">512M</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    ...</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>再次上传应该就会成功了</li></ul>`,116),m=[b];function h(F,g,E,v,x,B){return a(),n("div",null,m)}const f=s(A,[["render",h]]);export{k as __pageData,f as default};

import{_ as p,H as c,o as t,c as r,C as s,a as n,J as l,E as o,V as e}from"./chunks/framework.92369faf.js";const I=JSON.parse('{"title":"vue 实现小程序后台","description":"","frontmatter":{},"headers":[],"relativePath":"Vue/vueadmin.md","filePath":"Vue/vueadmin.md","lastUpdated":1687014617000}'),i={name:"Vue/vueadmin.md"},y=s("h1",{id:"vue-实现小程序后台",tabindex:"-1"},[n("vue 实现小程序后台 "),s("a",{class:"header-anchor",href:"#vue-实现小程序后台","aria-label":'Permalink to "vue 实现小程序后台"'},"​")],-1),D=s("h2",{id:"基于-vue-admin-template-koa-实现你的小程序后台管理系统",tabindex:"-1"},[n("基于 vue-admin-template+Koa 实现你的小程序后台管理系统 "),s("a",{class:"header-anchor",href:"#基于-vue-admin-template-koa-实现你的小程序后台管理系统","aria-label":'Permalink to "基于 vue-admin-template+Koa 实现你的小程序后台管理系统"'},"​")],-1),F=s("div",{class:"tip custom-block"},[s("p",{class:"custom-block-title"},"前言"),s("p",null,"本文作者：婧婧 本文共 3920 字，读完需要 15 分钟。 希望你看完能学到一点点东西！✨✨")],-1),A={id:"请花一些时间安静的读完本文-相信我-你一定可以实现属于自己的小程序后台管理系统。-对有需要的小伙伴还是有点意思的-😊😊😊",tabindex:"-1"},C=s("a",{class:"header-anchor",href:"#请花一些时间安静的读完本文-相信我-你一定可以实现属于自己的小程序后台管理系统。-对有需要的小伙伴还是有点意思的-😊😊😊","aria-label":'Permalink to "**<font face="楷体" color=Tomato>请花一些时间安静的读完本文，相信我，你一定可以实现属于自己的小程序后台管理系统。（对有需要的小伙伴还是有点意思的 😊😊😊）</font>**"'},"​",-1),d=s("code",null,"vue-admin-template",-1),u=s("code",null,"Koa2",-1),b=e('<h2 id="来吧-先来看一波效果图" tabindex="-1">来吧 先来看一波效果图 <a class="header-anchor" href="#来吧-先来看一波效果图" aria-label="Permalink to &quot;来吧 先来看一波效果图&quot;">​</a></h2><p>图挂了，上掘金看。</p><h2 id="具体实现步骤来了" tabindex="-1">具体实现步骤来了 <a class="header-anchor" href="#具体实现步骤来了" aria-label="Permalink to &quot;具体实现步骤来了&quot;">​</a></h2><h3 id="一、前端项目初始化" tabindex="-1">一、前端项目初始化 <a class="header-anchor" href="#一、前端项目初始化" aria-label="Permalink to &quot;一、前端项目初始化&quot;">​</a></h3><blockquote><p>从 github 上克隆初始前台项目 <strong><em><a href="https://github.com/PanJiaChen/vue-admin-template/blob/master/README-zh.md" target="_blank" rel="noreferrer">附上项目地址</a></em></strong></p></blockquote>',5),m=e("<li><p>1、成功后用 <code>vscode</code> 编辑器打开项目</p></li><li><p>2、我们在 <code>views</code> 目录下只留下 <code>login</code> 文件夹和 <code>404.vue</code>，其它全部删除。然后根据自己的小程序中需要管理的数据设计好需要哪些前台页面，根据自己的需求建好项目的视图文件。</p></li><li><p>3、接下来在 <code>router</code> 文件夹下的 <code>index.js</code> 中根据自己设计的页面进行路由规划（关于路由的配置就不详细去讲了）</p></li>",3),h=s("li",null,[s("p",null,[n("5、最后一步了，我们在"),s("code",null,"src"),n("下的"),s("code",null,"api"),n("文件夹中为每一个前端页面封装一个"),s("code",null,".js"),n("文件，在里面写获取后端数据的方法，然后在 "),s("code",null,"views"),n(" 文件夹里的视图页面中引入获取后端返回的数据。")])],-1),_=s("hr",null,null,-1),f=s("blockquote",null,[s("p",null,"下图为初始克隆下来的项目文件目录，注意图中标注的地方。")],-1),E=e('<ul><li>1、我在 <code>views</code> 目录下建立了三个文件夹 <code>playlist</code>、<code>swiper</code>、<code>blog</code>，分别代表上文 <code>gif</code> 图中显示的歌单管理、轮播图管理、博客管理三个页面的视图文件。（当然，你必须根据自己的小程序来设计。）</li><li>2、在 <code>api</code> 目录下新建了三个文件 <code>playlist.js</code>、<code>swiper.js</code>、<code>blog.js</code>，分别用于上一点三个页面数据的获取。</li></ul><hr><ul><li>至此，前端项目初始化就已经完成了。💦💦</li><li>接下来，我们进行后端项目初始化。</li></ul><hr><h3 id="二、后端项目初始化" tabindex="-1">二、后端项目初始化 <a class="header-anchor" href="#二、后端项目初始化" aria-label="Permalink to &quot;二、后端项目初始化&quot;">​</a></h3><ul><li><p>1、初始化一个 <code>node</code> 项目，安装项目相关依赖。此项目只用到以下依赖包 <code>koa</code>——本项目采用的后端框架 <code>koa-router</code>——路由管理工具 <code>koa-body</code>——用于<code>post</code>请求参数解析 <code>koa2-cors</code>——解决前后端跨域问题的<code>npm</code>包 <code>request</code>、<code>request-promise</code>——用于发送获取小程序云数据库中数据的请求</p></li><li><p>2、在根目录下新建一个 <code>app.js</code> 文件用于后端服务的入口文件</p></li><li><p>3、在根目录下新建一个 <code>controllers</code>文件夹用于存放从云数据库获取数据的 js 文件</p></li><li><p>4、在根目录下新建一个<code>utils</code>文件夹用于存放一些工具文件</p></li></ul><hr><ul><li>至此，后端项目初始化也完成了。💦💦</li><li>接下来，我们进行前后端项目的对接。</li></ul><hr><h3 id="三、前后端项目的对接" tabindex="-1">三、前后端项目的对接 <a class="header-anchor" href="#三、前后端项目的对接" aria-label="Permalink to &quot;三、前后端项目的对接&quot;">​</a></h3>',10),g={id:"这里我把本项目中一个页面数据获取的完整流程走一遍-便于大家理解。就用第一个页面-歌单列表的获取为例。开始吧",tabindex:"-1"},k=s("a",{class:"header-anchor",href:"#这里我把本项目中一个页面数据获取的完整流程走一遍-便于大家理解。就用第一个页面-歌单列表的获取为例。开始吧","aria-label":'Permalink to "<font color="red">这里我把本项目中一个页面数据获取的完整流程走一遍，便于大家理解。就用第一个页面，歌单列表的获取为例。开始吧！！！</font>"'},"​",-1),q=e(`<h4 id="前端" tabindex="-1">前端： <a class="header-anchor" href="#前端" aria-label="Permalink to &quot;前端：&quot;">​</a></h4><ul><li>在前端项目<code>views</code>文件夹中的<code>playlist.vue</code>中解构出<code>api</code>文件夹中的<code>playlist.js</code>中封装好的方法。如图所示：</li></ul><blockquote><p><code>fetchList</code>方法用于歌单的获取、<code>del</code>方法用于歌单的删除。代码不长，我就把<code>playlist.js</code>中这两个方法直接贴出来了。如下：（<code>baseURL</code>为后端项目开启的地址，<code>request</code>方法是模板项目封装好的<code>axios</code>请求方法）</p></blockquote><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> request </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@/utils/request</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> baseURL </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://localhost:8888</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fetchList</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">params</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">request</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">params</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        url</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">\`\${</span><span style="color:#A6ACCD;">baseURL</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">/playlist/list</span><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        method</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">get</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">del</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">params</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">request</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">params</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        url</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">\`\${</span><span style="color:#A6ACCD;">baseURL</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">/playlist/del</span><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        method</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">get</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h4 id="后端" tabindex="-1">后端： <a class="header-anchor" href="#后端" aria-label="Permalink to &quot;后端：&quot;">​</a></h4><ul><li>1、前端请求方法已经写好了，接下来就来到后端项目中了。首先来到我们后端项目的入口文件<code>app.js</code>中。 <blockquote><p>代码如下（代码都写了一些解释在上面）：</p></blockquote></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> Koa </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">koa</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> app </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Koa</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> Router </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">koa-router</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> router </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Router</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//跨域解决方法之一cors</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> cors </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">koa2-cors</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 接受post请求参数解析</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> koaBody </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">koa-body</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//对应你自己的小程序云环境id</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> ENV </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">jingjing-haohao</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 跨域</span></span>
<span class="line"><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">use</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">cors</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//前端项目的请求地址。</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">origin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://localhost:9528</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">credentials</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 接受post请求参数解析</span></span>
<span class="line"><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">use</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">koaBody</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">multipart</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">use</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">async</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">next</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">jingjing 全局中间件</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//配置全局变量。方便其他页面使用，这里用于定义好云环境id</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">state</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">env</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ENV</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">next</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//定义好playlist路由</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> playlist </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./controllers/playlist</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">router</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">use</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/playlist</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> playlist</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">routes</span><span style="color:#A6ACCD;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">use</span><span style="color:#A6ACCD;">(router</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">routes</span><span style="color:#A6ACCD;">())</span></span>
<span class="line"><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">use</span><span style="color:#A6ACCD;">(router</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">allowedMethods</span><span style="color:#A6ACCD;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//开启服务</span></span>
<span class="line"><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">listen</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">8888</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">项目已启动在8888端口、、、</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><ul><li>2、在项目入口文件中注册好<code>playlist</code>路由后，我们现在来到<code>controllers</code>文件夹下的<code>playlist.js</code>中。 <blockquote><p>代码如下：（避免篇幅过长，我只把删除功能的代码贴出来了。）全部代码点这里 <strong><em><a href="https://github.com/jingjing20/music-yun-backend/blob/master/music-admin-backend/controllers/playlist.js" target="_blank" rel="noreferrer">playlist.js</a></em></strong></p></blockquote></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> Router </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">koa-router</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> router </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Router</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> callCloudDB </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">../utils/callCloudDB</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">router</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/del</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">next</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">params</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">request</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">query</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">query</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">db.collection(&#39;playlist&#39;).doc(&#39;</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">params</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">id</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">&#39;).remove()</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">res</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">callCloudDB</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">databasedelete</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">query</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">body</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        code</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">20000</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        data</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">res</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> router</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>一些解释如下：</p><ul><li>1、这里用<code>get</code>还是<code>post</code>方法是必须和前端请求时的方法一样。</li><li>2、<code>query</code>是操作数据库的<code>sql</code>语句。</li><li>3、返回到后端的数据中<code>code=20000</code>，这是前端模板中规定后端必须返回的状态码，有这个状态码才认为请求成功。</li><li>4、代码第三行导入了<code>callCloudDB</code>模块，这是因为我们在请求或查询云数据库和操作云数据库的时候，查微信官方文档发现，给出的请求地址特别像（只是地址中一个参数不一样）、请求参数完全一样。所以我们把它封装成一个<code>callCloudDB</code>模块。之后需要和数据库交互的时候直接调用此方法传入相应的参数就可以了。例如上面<code>del</code>方法需要删除数据库数据的代码<code>const res = await callCloudDB(ctx, &#39;databasedelete&#39;, query)</code>,其中<code>ctx</code>为上下文环境，<code>databasedelete</code>为删除操作固定参数，<code>query</code>为<code>sql</code>语句。之后需要进行其他操作只要改对应的参数就可以。怎么样，是不是很方便 😬😬😬。 <blockquote><p><code>callCloudDB.js</code>代码附上：</p></blockquote></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> getAccessToken </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./getAccessToken.js</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> rp </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">request-promise</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> callCloudDB </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">fnName</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">query</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{})</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ACCESS_TOKEN</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">getAccessToken</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">options</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        method</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">POST</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        uri</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">https://api.weixin.qq.com/tcb/</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">fnName</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">?access_token=</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">ACCESS_TOKEN</span><span style="color:#89DDFF;">}\`</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        body</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#A6ACCD;">query</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">            env</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">state</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">env</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">        json</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// Automatically stringifies the body to JSON</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">rp</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">options</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">res</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">res</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">catch</span><span style="color:#F07178;">(</span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> callCloudDB</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>又一些解释如下：</p><ul><li><code>ACCESS_TOKEN</code>为小程序的接口调用凭证，和小程序数据交互必须要的参数，引入<code>getAccessToken.js</code>就是为了获取它的，<code>getAccessToken.js</code>后面还会详细解释一下。关于<code>AccessToken</code>,官方文档有详细讲解 <strong><em><a href="https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/access-token/auth.getAccessToken.html" target="_blank" rel="noreferrer">链接在此！</a></em></strong></li></ul><hr>`,15),T={id:"让我们简单从头再理一遍思路。",tabindex:"-1"},v=s("a",{class:"header-anchor",href:"#让我们简单从头再理一遍思路。","aria-label":'Permalink to "<font color="red" size="3">让我们简单从头再理一遍思路。</font>"'},"​",-1),x=e('<ul><li><p>1、前端在<code>api</code>文件里写好获取数据的请求方法、向后端传需要用到的参数。</p></li><li><p>2、我们在后端<code>controllers</code>文件夹下建好相对应的文件，如图：</p></li><li><p>3、在文件里借助微信官方文档中云开发下的<a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/reference-http-api/" target="_blank" rel="noreferrer">HTTP API 文档</a>提供的方法去写好操作自己的云函数或云数据库的代码。将取到的值返回给前端，记得一定要带上一个状态码（20000）</p></li><li><p>4、在前端项目中写好页面（初始项目已经集成<code>element-ui</code>，我们可以直接用它），把后端返回的数据进行一些处理，然后显示到页面上。</p></li></ul><hr>',2),j=e('<hr><h3 id="四、在项目中我感觉比较好的地方-大白感觉-🙄🙄🙄" tabindex="-1">四、在项目中我感觉比较好的地方（大白感觉 🙄🙄🙄） <a class="header-anchor" href="#四、在项目中我感觉比较好的地方-大白感觉-🙄🙄🙄" aria-label="Permalink to &quot;四、在项目中我感觉比较好的地方（大白感觉 🙄🙄🙄）&quot;">​</a></h3><h4 id="_1、后端封装的工具文件很-nice-即-utils-文件夹下的文件" tabindex="-1">1、后端封装的工具文件很 nice（即 utils 文件夹下的文件） <a class="header-anchor" href="#_1、后端封装的工具文件很-nice-即-utils-文件夹下的文件" aria-label="Permalink to &quot;1、后端封装的工具文件很 nice（即 utils 文件夹下的文件）&quot;">​</a></h4><ul><li>为小程序的接口调用凭证<code>ACCESS_TOKEN</code>的获取封装了一个<code>getAccessToken.js</code>文件，它的作用是获取<code>ACCESS_TOKEN</code>后在同级目录中生成一个<code>access_token.json</code>的<code>JSON</code>文件，把<code>ACCESS_TOKEN</code>存进去同时存入获取时间。然后把<code>getAccessToken</code>作为模块导出，在其他页面就可以直接导入使用。而且文件里面对<code>ACCESS_TOKEN</code>做了过期时间判断，过期了就重新获取（因为<code>ACCESS_TOKEN</code>有效期为 2 小时）</li><li>为操作云数据库封装了一个<code>callCloudDB.js</code>，此文件作用上面已经提到。</li><li>为操作云函数封装了一个<code>callCloudFn.js</code>，因为操作云函数调用的接口所需要的参数也就云函数名称和传入云函数的参数不一样，可以很好的复用。</li></ul><h4 id="_2、前端模板项目特别牛逼-我们只需要根据自己的需求在模板项目中稍微修改一下视图和路由就可以实现属于自己的项目。" tabindex="-1">2、前端模板项目特别牛逼，我们只需要根据自己的需求在模板项目中稍微修改一下视图和路由就可以实现属于自己的项目。 <a class="header-anchor" href="#_2、前端模板项目特别牛逼-我们只需要根据自己的需求在模板项目中稍微修改一下视图和路由就可以实现属于自己的项目。" aria-label="Permalink to &quot;2、前端模板项目特别牛逼，我们只需要根据自己的需求在模板项目中稍微修改一下视图和路由就可以实现属于自己的项目。&quot;">​</a></h4><ul><li>模板项目作者（膜拜）—— <strong><em><a href="https://juejin.im/user/5648a5ca60b259caebaf7562" target="_blank" rel="noreferrer">花裤衩</a></em></strong></li><li><code>github</code> 地址—— <strong><em><a href="https://github.com/PanJiaChen/vue-admin-template/blob/master/README-zh.md" target="_blank" rel="noreferrer">https://github.com/PanJiaChen/vue-admin-template/blob/master/README-zh.md</a></em></strong></li></ul><h3 id="五、完成项目过程中遇到的问题-当然不代表小伙伴也一定会有同样的问题" tabindex="-1">五、完成项目过程中遇到的问题（当然不代表小伙伴也一定会有同样的问题） <a class="header-anchor" href="#五、完成项目过程中遇到的问题-当然不代表小伙伴也一定会有同样的问题" aria-label="Permalink to &quot;五、完成项目过程中遇到的问题（当然不代表小伙伴也一定会有同样的问题）&quot;">​</a></h3><h4 id="_1、浏览器滑动到页面底部的时候再次从数据库获取数据显示到页面上。" tabindex="-1">1、浏览器滑动到页面底部的时候再次从数据库获取数据显示到页面上。 <a class="header-anchor" href="#_1、浏览器滑动到页面底部的时候再次从数据库获取数据显示到页面上。" aria-label="Permalink to &quot;1、浏览器滑动到页面底部的时候再次从数据库获取数据显示到页面上。&quot;">​</a></h4><ul><li><p>对于浏览器是否滑到了底部我刚开始准备进行如下的判断。</p><blockquote><p>1、获取文档的真实高度（即你设定每次取多少条数据在页面上显示的高度） <code>const scrollHeight = document.documentElement.scrollHeight</code> 2、获取浏览器窗口的可视高度,就是肉眼可见的那部分全屏高度 <code>const clientHeight = document.documentElement.clientHeight</code> 3、获取浏览器向上滚动的高度 <code>const scrollTop = document.documentElement.scrollTop </code></p></blockquote></li><li><p>取到这三个数据之后根据<code>scrollHeight == scrollTop + clientHeight</code>这个判断条件来控制是否再次获取数据，然后、、、🤕🤕</p></li><li><p>看图</p></li><li><p>最后我才想到这个点上来，会不会是这个有问题。对这三个数据分别打印出来如上图，红框中就是浏览器滑到底部打印出来的数据，我哭了 🤪🤪</p></li><li><p>我们发现<code>scrollHeight 比 scrollTop + clientHeight</code>小那么 0.28、、。所以导致<code>scroll.js</code>没有生效。改一下这个判断条件就解决了这个问题。</p></li></ul><h4 id="_2、我在博客页面获取发布时间的的时候" tabindex="-1">2、我在博客页面获取发布时间的的时候 <a class="header-anchor" href="#_2、我在博客页面获取发布时间的的时候" aria-label="Permalink to &quot;2、我在博客页面获取发布时间的的时候&quot;">​</a></h4><ul><li>即图示红框部分</li><li>我刚开始在后端返回的数据中看到有<code>createTime</code>下面有一个<code>$date</code>，可是我就是取不到这个值。试了好久、、后来我把<code>createTime</code>打印出来发现它是一个<code>{__ob__: Observer}</code>。然后百度发现好多这样的问题，根据一位网友的方法顺利解决。需要将返回的数据<code>data</code>先转换为<code>JSON</code>字符串形式，然后再从字符串形式转换成<code>JSON</code>格式即<code>JSON.parse(JSON.stringify(data))</code>（虽然知道要这样做就可以解决问题，但是不知道为什么 😅，希望如果有了解的大佬给大白解释一下。😁）</li><li>对于时间格式化采用了<code>moment.js</code>来解决，<code>moment.js</code>这个时间处理类库真的很方便哦！使用也很简单！推荐一下，文末附链接。（写此篇文章中途学到的 🤣🤣）</li></ul><hr><h3 id="参考文档" tabindex="-1">参考文档 <a class="header-anchor" href="#参考文档" aria-label="Permalink to &quot;参考文档&quot;">​</a></h3><ul><li><a href="http://momentjs.cn/" target="_blank" rel="noreferrer">Moment.js 中文网</a></li><li><a href="https://element.eleme.cn/#/zh-CN/component" target="_blank" rel="noreferrer">element-ui</a></li><li><a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/reference-http-api/" target="_blank" rel="noreferrer">微信云开发 HTTP API 文档</a></li></ul>',14);function P(S,N,w,V,O,R){const a=c("font");return t(),r("div",null,[y,D,s("p",null,[n("属于你的微信小程序后台管理系统来了！！！"),l(a,{color:"red"},{default:o(()=>[n("(仅仅指云开发的小程序哦。😁)")]),_:1}),n("如果你自己已经做好了一个采用云开发的微信小程序，但是还没有给它配上一个后台管理系统，那就赶快行动起来吧！！！本文将会很详细的带你实现,包括过程中的一些 bug 解决方式（可能对大佬来说不是 bug 的 bug🤣）")]),F,s("h4",A,[s("strong",null,[l(a,{face:"楷体",color:"Tomato"},{default:o(()=>[n("请花一些时间安静的读完本文，相信我，你一定可以实现属于自己的小程序后台管理系统。（对有需要的小伙伴还是有点意思的 😊😊😊）")]),_:1})]),n(),C]),s("p",null,[n("本文是主要是基于开源项目 "),s("strong",null,[l(a,{face:"宋体",size:"2",color:"FireBrick"},{default:o(()=>[n(" vue-admin-template + koa + element-ui + 微信云开发 HTTP API ")]),_:1})]),n(" 实现一个微信小程序后台管理系统。采用前后端分离架构，以 "),d,n(" 实现管理系统的前端界面，后端我们这里采用 "),u,n("来实现，当然你也可以换其他框架来实现。")]),b,s("ul",null,[m,s("li",null,[s("p",null,[n("4、想好数据怎么显示，需要做什么操作 "),s("strong",null,[l(a,{face:"宋体",color:"OrangeRed",size:"1"},{default:o(()=>[n("（因为此模板已经集成了 element-ui，即想好用 element-ui 的什么组件来显示界面，本文中写的项目比较简单，所以只用到 table、button、dialog、form 这几个组件） ")]),_:1})])])]),h]),_,s("blockquote",null,[s("p",null,[s("strong",null,[l(a,{face:"楷体",size:"3",color:"Tomato"},{default:o(()=>[n("这里我以本项目目录和克隆下来的项目目录来一个对照应该会更清楚一点。")]),_:1})])])]),f,s("blockquote",null,[l(a,{color:"Tomato",size:"3",face:"黑体"},{default:o(()=>[n("下图为本项目文件目录。注意标注的地方你会发现只有两个地方有改变。")]),_:1})]),E,s("h4",g,[l(a,{color:"red"},{default:o(()=>[n("这里我把本项目中一个页面数据获取的完整流程走一遍，便于大家理解。就用第一个页面，歌单列表的获取为例。开始吧！！！")]),_:1}),n(),k]),q,s("h4",T,[l(a,{color:"red",size:"3"},{default:o(()=>[n("让我们简单从头再理一遍思路。")]),_:1}),n(),v]),x,l(a,{color:"red"},{default:o(()=>[n("整个流程大概就是这样，其他页面也是完全一样的流程。还有一些细节我接下来会继续讲讲，也有些细节没有详细去讲。可能我写的不够好、难以理解，又或许小伙伴哪里没看太懂，欢迎评论区讨论交流。有需要可以联系作者共同探讨哦。😁")]),_:1}),j])}const K=p(i,[["render",P]]);export{I as __pageData,K as default};

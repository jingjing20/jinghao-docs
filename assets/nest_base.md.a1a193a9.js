import{_ as s,o as a,c as n,V as e}from"./chunks/framework.92369faf.js";const A=JSON.parse('{"title":"nest 基础","description":"","frontmatter":{},"headers":[],"relativePath":"nest/base.md","filePath":"nest/base.md","lastUpdated":1689319759000}'),l={name:"nest/base.md"},o=e(`<h1 id="nest-基础" tabindex="-1">nest 基础 <a class="header-anchor" href="#nest-基础" aria-label="Permalink to &quot;nest 基础&quot;">​</a></h1><h2 id="cli-命令" tabindex="-1">cli 命令 <a class="header-anchor" href="#cli-命令" aria-label="Permalink to &quot;cli 命令&quot;">​</a></h2><h3 id="新建模块" tabindex="-1">新建模块 <a class="header-anchor" href="#新建模块" aria-label="Permalink to &quot;新建模块&quot;">​</a></h3><ul><li><code>nest generate module user</code></li><li>会创建 <code>src/user</code> 文件夹，同时新建一个 <code>user.module.ts</code></li></ul><h3 id="新建小模块" tabindex="-1">新建小模块 <a class="header-anchor" href="#新建小模块" aria-label="Permalink to &quot;新建小模块&quot;">​</a></h3><ul><li><code>nest generate module user-create user/create --flat</code></li><li>会创建 <code>src/user/create</code> 文件夹，同时新建一个 <code>user-create.module.ts</code></li></ul><h3 id="新建-controller" tabindex="-1">新建 controller <a class="header-anchor" href="#新建-controller" aria-label="Permalink to &quot;新建 controller&quot;">​</a></h3><ul><li><code>nest generate controller user-create user/create/controllers --flat</code></li><li>会创建 <code>src/user/create/controllers</code> 文件夹，同时新建一个 <code>user-create.controller.ts</code></li></ul><h3 id="新建实体-entities" tabindex="-1">新建实体 <code>entities</code> <a class="header-anchor" href="#新建实体-entities" aria-label="Permalink to &quot;新建实体 \`entities\`&quot;">​</a></h3><ul><li><code>pnpm gt user user/entities</code></li><li>会创建 <code>src/user/entities</code> 文件夹，同时新建一个 <code>user-entity.ts</code>和<code>user.entity.subscriber.ts</code></li></ul><h3 id="新建命令-commands" tabindex="-1">新建命令 <code>commands</code> <a class="header-anchor" href="#新建命令-commands" aria-label="Permalink to &quot;新建命令 \`commands\`&quot;">​</a></h3><ul><li><code>pnpm gc create-user user/create/commands</code></li><li>会创建 <code>src/user/create/commands</code> 文件夹，同时新建一个 <code>create-user.command.ts</code></li></ul><h2 id="typeorm-中的属性含义" tabindex="-1">typeorm 中的属性含义 <a class="header-anchor" href="#typeorm-中的属性含义" aria-label="Permalink to &quot;typeorm 中的属性含义&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">TypeOrmModule</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forRootAsync</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">inject</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [ConfigService]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">useFactory</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">configService</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ConfigService</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">mysql</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">host</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> configService</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">db.host</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">port</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> configService</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">db.port</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">username</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> configService</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">db.username</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">password</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> configService</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">db.password</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">database</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> configService</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">db.database</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">synchronize</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> configService</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">typeOrm.synchronize</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">autoLoadEntities</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> configService</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">typeOrm.autoLoadEntities</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="synchronize" tabindex="-1"><code>synchronize</code> <a class="header-anchor" href="#synchronize" aria-label="Permalink to &quot;\`synchronize\`&quot;">​</a></h3><ul><li><p><code>synchronize</code> 属性是 TypeORM 中的一个配置选项，用于指定在应用程序启动时是否自动同步数据库结构。该属性用于配置数据库模式自动更新的行为。</p></li><li><p>当 <code>synchronize</code> 设置为 <code>true</code> 时，TypeORM 会在应用程序启动时自动检查实体（Entities）的定义与数据库表的结构是否一致。如果存在差异，TypeORM 将尝试更新数据库表以与实体定义保持一致。</p></li><li><p>这种自动同步的机制适用于开发和测试环境，可以简化开发人员的工作流程。每当你更改实体的定义时，TypeORM 将自动更新数据库表的结构，无需手动执行数据库迁移或手动更新表结构。</p></li><li><p>但需要注意的是，在生产环境中，将 <code>synchronize</code> 设置为 <code>true</code> 是不推荐的。在生产环境中，建议使用数据库迁移工具（如 TypeORM 的迁移功能）来管理数据库结构的变更，以确保数据的完整性和一致性。</p></li><li><p>默认情况下，<code>synchronize</code> 属性为 <code>false</code>，即禁用自动同步功能。要启用自动同步，你可以在 TypeORM 的配置文件中将 <code>synchronize</code> 设置为 <code>true</code>，或者在 <code>TypeOrmModule.forRoot()</code> 方法中将其配置为 <code>synchronize: true</code>。</p></li></ul><p>示例配置：</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">TypeOrmModule</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forRoot</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 其他配置项...</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">synchronize</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>需要注意的是，自动同步功能可能会导致数据丢失或不可逆的表结构更改，因此在生产环境中使用时要非常谨慎，并在必要时备份数据。</li></ul><h3 id="autoloadentities" tabindex="-1"><code>autoLoadEntities</code> <a class="header-anchor" href="#autoloadentities" aria-label="Permalink to &quot;\`autoLoadEntities\`&quot;">​</a></h3><ul><li><p><code>autoLoadEntities</code> 是 TypeORM 中的一个配置选项，用于指定是否自动加载实体（Entities）。</p></li><li><p>当 <code>autoLoadEntities</code> 设置为 <code>true</code> 时，TypeORM 会自动加载应用程序中定义的所有实体。这意味着你不需要手动在 TypeORM 配置中指定每个实体的路径，TypeORM 将会自动扫描并加载你的实体。</p></li><li><p>使用 <code>autoLoadEntities</code> 的好处是，它使实体的管理更加方便。你只需要在你的项目中创建实体类，并确保这些类被正确导入。TypeORM 将根据这些导入的实体类自动加载和管理数据库表结构。</p></li><li><p>默认情况下，<code>autoLoadEntities</code> 的值为 <code>false</code>，即禁用自动加载实体功能。要启用自动加载实体，你可以在 TypeORM 的配置文件中将 <code>autoLoadEntities</code> 设置为 <code>true</code>，或者在 <code>TypeOrmModule.forRoot()</code> 方法中将其配置为 <code>autoLoadEntities: true</code>。</p></li></ul><p>示例配置：</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">TypeOrmModule</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forRoot</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 其他配置项...</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">autoLoadEntities</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="info custom-block"><p class="custom-block-title">注意</p><p>需要注意的是，启用自动加载实体功能时，TypeORM 将会扫描整个项目并加载所有符合要求的实体类。这可能会导致性能上的一些影响，特别是当项目中存在大量实体类时。如果你的项目中只有少量实体类，或者你希望手动控制要加载的实体，可以将 <code>autoLoadEntities</code> 设置为 <code>false</code>，并手动指定要加载的实体路径。通过明确指定要加载的实体路径，你可以更精确地控制哪些实体将被加载和管理。</p></div><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">TypeOrmModule</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forRoot</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 其他配置项...</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">autoLoadEntities</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">entities</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [Entity1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Entity2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,25),p=[o];function c(t,r,i,y,D,d){return a(),n("div",null,p)}const C=s(l,[["render",c]]);export{A as __pageData,C as default};

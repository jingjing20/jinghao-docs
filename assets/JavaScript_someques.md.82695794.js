import{_ as s,o as a,c as n,V as o}from"./chunks/framework.364d6ed5.js";const A=JSON.parse('{"title":"JavaScript 100题😊","description":"","frontmatter":{"title":"JavaScript 100题:blush:"},"headers":[],"relativePath":"JavaScript/someques.md","filePath":"JavaScript/someques.md","lastUpdated":1686842923000}'),l={name:"JavaScript/someques.md"},e=o(`<p>😊😊😊</p><h2 id="_1、写出下列程序结果-词法" tabindex="-1">1、写出下列程序结果（词法） <a class="header-anchor" href="#_1、写出下列程序结果-词法" aria-label="Permalink to &quot;1、写出下列程序结果（词法）&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Foo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">getName</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">alert</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">Foo</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getName</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">alert</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">2</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#FFCB6B;">Foo</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getName</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">alert</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">3</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> getName </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">alert</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">4</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getName</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">alert</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">5</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 写出下面结果</span></span>
<span class="line"><span style="color:#A6ACCD;">Foo</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getName</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">getName</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">Foo</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getName</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">getName</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> Foo</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getName</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Foo</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getName</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Foo</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getName</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">提示</p><p>在正式做之前，我们得清楚几个概念：</p></div><ul><li>函数提升要比<code>var</code>声明提升更加高，也就是说：如果在代码中同时定义了相同名称的一个函数和一个变量，是先会执行<code>function getName() {}</code>，再执行<code>var getName = function () {}</code>的。</li><li>关于<code>new</code>和<code>.</code>以及<code>()</code>优先级的问题，不带参数的<code>new</code>调用优先级是要小于<code>.</code>的，而<code>()</code>的优先级是最大的</li></ul><p>首先是初始化阶段：</p><ul><li><code>function getName() {} </code>和<code>function Foo() {}</code>被提升到作用域最顶层(但是此时还没有调用<code>Foo</code>函数，所以它里面的内容不会被执行)</li><li>随后，<code>var getName</code>也被提升到了作用域最顶层，发现有一个和它同名的<code>getName</code>，后来者覆盖了它，所以此时的<code>getName</code>变成了<code>alert(4)</code></li></ul><p>然后到了调用阶段：</p><ul><li><ol><li>首先调用的是<code>Foo.getName()</code>，由于<code>Foo</code>是一个构造函数，且之前定义了它的静态方法<code>Foo.getName = alert(2)</code>，因此显示调用整个静态方法，弹出<code>2</code></li></ol></li><li><ol start="2"><li>之后调用了<code>window</code> 下的<code>getName()</code>，在初始化阶段已经说了，这时候的<code>getName</code>是<code>alert(4)</code>，所以弹出<code>4</code></li></ol></li><li><ol start="3"><li>接着执行<code>Foo().getName()</code>，这里可以分为两步来看，第一步：调用<code>Foo()</code>方法，这时候可以执行里面的代码了，也就是<code>getName = alert(1)</code>，但是在<code>Foo()</code>函数内没有<code>getName</code>，所以此时JS就向外查找，找到了window下的那个<code>getName</code>(也就是<code>alert(4)</code>)，找到了之后把它改为了<code>alert(1)</code>，记住这时候的window下的<code>getName</code>就变成了<code>alert(1)</code>，不过还没有结束，然后返回了<code>this</code>，这时候我们知道<code>this</code>表示的是<code>window</code>(因为调用<code>Foo()</code>函数的是<code>windwo</code>)；第二步：执行<code>Foo().getName()</code>，刚刚<code>Foo()</code>的返回值我们已经知道了，是<code>window</code>，所以相当于调用了<code>window.getName()</code>，而在第一步中已经将<code>getName</code>变成了<code>alert(1)</code>，所以这时候会弹出<code>1</code></li></ol></li><li><ol start="4"><li>然后是调用<code>getName()</code>，这时候我们已经知道<code>getName</code>是<code>alert(1)</code>，所以会再次弹出<code>1</code></li></ol></li><li><ol start="5"><li>执行<code>new Foo.getName()</code>，在开头我已经提到了，不带参数的<code>new</code>调用优先级是要小于<code>.</code>的，所以这里相当于是<code>new (Foo.getName)()</code>，并且这里我们不要管<code>new</code>的产生结果，因为题目没有要你打印出它的结果，我们只需要关心<code>new</code>后面的东西就了，所以也就是关心<code>Foo.getName()</code>，额，这又是调用<code>Foo</code>构造函数的静态方法，和第一个弹出的一样，弹出<code>2</code></li></ol></li><li><ol start="6"><li>同理，因为<code>()</code>的优先级是最大的，所以执行<code>new Foo().getName()</code>相当于是执行了<code>(new Foo()).getName()</code>，也就是先产生了一个<code>Foo</code>的实例，我假设它是<code>{}</code>，也就是执行<code>{}.getName()</code>，但是这个空对象它自己没有<code>getName()</code>方法呀，所以它就用原型链上的<code>getName</code>，也就是弹出<code>3</code></li></ol></li><li><ol start="7"><li>最后一个其实和第六个差不多，转换为伪代码就是<code>new (new Foo()).getName()</code>，也是弹出了<code>3</code>。</li></ol></li></ul><div class="danger custom-block"><p class="custom-block-title">温馨提醒</p><p>答案在下面，可以自己先尝试想想看哦。</p></div><details class="details custom-block"><summary>答案</summary><p>2 4 1 1 2 3 3</p></details><hr><h2 id="_2、写出下列程序结果-堆地址和栈地址" tabindex="-1">2、写出下列程序结果（堆地址和栈地址） <a class="header-anchor" href="#_2、写出下列程序结果-堆地址和栈地址" aria-label="Permalink to &quot;2、写出下列程序结果（堆地址和栈地址）&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">test</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">person</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">person</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">age</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">26</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">person</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hzj</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    age</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">18</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">person</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> p1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">fyq</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">age</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">19</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> p2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(p1)</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(p1) </span><span style="color:#676E95;font-style:italic;">// -&gt; ?</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(p2) </span><span style="color:#676E95;font-style:italic;">// -&gt; ?</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><div class="danger custom-block"><p class="custom-block-title">温馨提醒</p><p>答案在下面，可以自己先尝试想想看哦。</p></div><details class="details custom-block"><summary>答案 解析</summary><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">p1：</span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> “</span><span style="color:#A6ACCD;">fyq</span><span style="color:#F07178;">”</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">age</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">26</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">p2：</span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> “</span><span style="color:#A6ACCD;">hzj</span><span style="color:#F07178;">”</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">age</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">18</span><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>原因: 在函数传参的时候传递的是对象在堆中的内存地址值，test函数中的实参person是p1对象的内存地址，通过调用person.age = 26确实改变了p1的值，但随后person变成了另一块内存空间的地址，并且在最后将这另外一份内存空间的地址返回，赋值给了p2。</p></details>`,16),p=[e];function c(t,r,F,y,i,D){return a(),n("div",null,p)}const C=s(l,[["render",c]]);export{A as __pageData,C as default};

import{_ as s,o as a,c as n,V as l}from"./chunks/framework.92369faf.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docker/base.md","filePath":"docker/base.md","lastUpdated":1688659153000}'),e={name:"docker/base.md"},p=l(`<h2 id="docker-基础" tabindex="-1">docker 基础 <a class="header-anchor" href="#docker-基础" aria-label="Permalink to &quot;docker 基础&quot;">​</a></h2><h3 id="dockerfile-解释" tabindex="-1">dockerfile 解释 <a class="header-anchor" href="#dockerfile-解释" aria-label="Permalink to &quot;dockerfile 解释&quot;">​</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">FROM</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">node:18</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">WORKDIR</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/app</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">COPY</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">package.json</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">COPY</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">*</span><span style="color:#C3E88D;">.lock</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">RUN</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">registry</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://registry.npmmirror.com/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">RUN</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">COPY</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">RUN</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">EXPOSE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3000</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">CMD</span><span style="color:#A6ACCD;"> [ </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">node</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./dist/main.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><ul><li><p>FROM node:18 是继承 node:18 基础镜像。</p></li><li><p>WORKDIR /app 是指定当前目录为 /app</p></li><li><p>COPY 复制宿主机的 package.json 和 lock 文件到容器的当前目录，也就是 /app 下</p></li><li><p>RUN 是执行命令，这里执行了 npm install。</p></li><li><p>然后再复制其余的文件到容器内。</p></li><li><p>EXPOSE 指定容器需要暴露的端口是 3000。</p></li><li><p>CMD 指定容器跑起来时执行的命令是 node ./dist/main.js。</p></li></ul><h3 id="构建镜像命令" tabindex="-1">构建镜像命令 <a class="header-anchor" href="#构建镜像命令" aria-label="Permalink to &quot;构建镜像命令&quot;">​</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dockerfile-test:first</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>-t 是指定名字和标签，这里镜像名为 dockerfile-test 标签为 first</li><li>最后面的 . 指的是构建路径为当前根目录</li></ul><h3 id="运行容器命令" tabindex="-1">运行容器命令 <a class="header-anchor" href="#运行容器命令" aria-label="Permalink to &quot;运行容器命令&quot;">​</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2333</span><span style="color:#C3E88D;">:3000</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--name</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">jingjing</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dockerfile-test:first</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><p>-d 是后台运行。</p></li><li><p>-p 指定端口映射，映射宿主机的 2333 端口到容器的 3000 端口。</p></li><li><p>--name 指定容器名</p></li></ul><h3 id="技巧一-使用-alpine-镜像-而不是默认的-linux-镜像【减小体积】" tabindex="-1">技巧一：使用 alpine 镜像，而不是默认的 linux 镜像【减小体积】 <a class="header-anchor" href="#技巧一-使用-alpine-镜像-而不是默认的-linux-镜像【减小体积】" aria-label="Permalink to &quot;技巧一：使用 alpine 镜像，而不是默认的 linux 镜像【减小体积】&quot;">​</a></h3><ul><li>修改一下上述 dockerfile 内容</li></ul><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">FROM</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">node:18</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">改成</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">FROM</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">node:18-alpine3.14</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>重新build一下镜像【换个名字】</li></ul><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dockerfile-test:second</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>可以打开 docker desktop 看到 second 这个镜像会比 first 这个镜像体积减少大约 900M</li></ul><h3 id="技巧二-使用多阶段构建" tabindex="-1">技巧二：使用多阶段构建 <a class="header-anchor" href="#技巧二-使用多阶段构建" aria-label="Permalink to &quot;技巧二：使用多阶段构建&quot;">​</a></h3>`,17),o=[p];function r(c,t,i,C,d,y){return a(),n("div",null,o)}const A=s(e,[["render",r]]);export{u as __pageData,A as default};
